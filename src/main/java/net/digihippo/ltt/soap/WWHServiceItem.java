package net.digihippo.ltt.soap;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 4.1.9.1
//
// Created by Quasar Development at 02-12-2015
//
//---------------------------------------------------


import org.ksoap2.serialization.*;

import java.util.Hashtable;

public class WWHServiceItem extends WWHBaseServiceItem implements KvmSerializable
{

    
    public WWHArrayOfServiceLocations origin=new WWHArrayOfServiceLocations();
    
    public WWHArrayOfServiceLocations destination=new WWHArrayOfServiceLocations();
    
    public WWHArrayOfServiceLocations currentOrigins=new WWHArrayOfServiceLocations();
    
    public WWHArrayOfServiceLocations currentDestinations=new WWHArrayOfServiceLocations();

    public WWHServiceItem ()
    {
    }

    public WWHServiceItem (Object paramObj,WWHExtendedSoapSerializationEnvelope __envelope)
    {
	    super(paramObj, __envelope);
	    if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;


        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                //if you have compilation error here, please use a ksoap2.jar and ExKsoap2.jar from libs folder (in the generated zip file)
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                Object obj = info.getValue();
                if (info.name.equals("origin"))
                {
                    Object j = obj;
                    this.origin = new WWHArrayOfServiceLocations(j,__envelope);
                    continue;
                }
                if (info.name.equals("destination"))
                {
                    Object j = obj;
                    this.destination = new WWHArrayOfServiceLocations(j,__envelope);
                    continue;
                }
                if (info.name.equals("currentOrigins"))
                {
                    Object j = obj;
                    this.currentOrigins = new WWHArrayOfServiceLocations(j,__envelope);
                    continue;
                }
                if (info.name.equals("currentDestinations"))
                {
                    Object j = obj;
                    this.currentDestinations = new WWHArrayOfServiceLocations(j,__envelope);
                    continue;
                }

            }

        }



    }

    @Override
    public Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.origin!=null?this.origin:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.destination!=null?this.destination:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.currentOrigins!=null?this.currentOrigins:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.currentDestinations!=null?this.currentDestinations:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+4;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "origin";
            info.namespace= "http://thalesgroup.com/RTTI/2015-05-14/ldb/types";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "destination";
            info.namespace= "http://thalesgroup.com/RTTI/2015-05-14/ldb/types";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "currentOrigins";
            info.namespace= "http://thalesgroup.com/RTTI/2015-05-14/ldb/types";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "currentDestinations";
            info.namespace= "http://thalesgroup.com/RTTI/2015-05-14/ldb/types";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

}
